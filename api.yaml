openapi: 3.0.3
info:
  version: 1.0.0
  title: access
  description: This service is designed to manage all resources and functional flows surrounding user and application authorization and authentication
servers:
  - url: /access
paths:
  /accounts:
    post:
      operationId: CreateAccount
      tags:
        - accounts
      summary: Create a new Account
      description: Create a new Account by supplying basic information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        201:
          description: Successful creation of an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
    get:
      operationId: ListAccounts
      tags:
        - accounts
      summary: List all accounts you have access to
      description: Create a new Account by supplying basic information
      responses:
        201:
          description: Successful creation of an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountResponse'

  /accounts/{id}:
    get:
      operationId: GetAccount
      tags:
        - accounts
      summary: Get an existing account by id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: primary id, uuid of the account to be retrieved
      responses:
        200:
          description: Successful creation of an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'

  /accounts/{id}/applications:
    post:
      operationId: CreateAccountApplication
      tags:
        - applications
      summary: Create a new Account Application
      description: Create a new Account application
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: primary id for the account the application will belong to
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAppRequest'
      responses:
        201:
          description: Successful creation of an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountAppResponse'

  /users:
    post:
      operationId: CreateUser
      tags:
        - users
      summary: Create a new User
      description: Create a new User by supplying login credentials at a minimum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        201:
          description: Successful creation of an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /authenticate:
    post:
      operationId: Authenticate
      tags:
        - authenticate
      summary: Authenticate a user or application
      description: Authenticate a user or application
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AuthenticateUser'
                - $ref: '#/components/schemas/AuthenticateApp'
      responses:
        200:
          description: Successful creation of an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateRes'

components:
  schemas:
    AccountRequest:
      type: object
      additionalProperties: false
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          description: The name of the account
          example: Johns Place
        email:
          type: string
          description: The email address of the account owner
          example: john@smith.co.uk
        password:
          type: string
          description: The user password of the account owner
        description:
          type: string
          maxLength: 200
          description: An optional short description of the account

    CreateAccountResponse:
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - email
      properties:
        id:
          type: string
          format: uuid
          description: A generated unique identifier for the newly created account
        name:
          type: string
          description: The name of the account
          example: Johns Place
        email:
          type: string
          description: The email address of the account owner
          example: john@smith.co.uk
        description:
          type: string
          maxLength: 200
          description: An optional short description of the account

    AccountResponse:
      type: object
      additionalProperties: false
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          description: A generated unique identifier for the newly created account
        name:
          type: string
          description: The name of the account
          example: Johns Place
        description:
          type: string
          maxLength: 200
          description: An optional short description of the account

    ListAccountResponse:
      type: array
      items:
        $ref: '#/components/schemas/AccountResponse'

    UserRequest:
      type: object
      additionalProperties: false
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: The email address of the user being created
          example: john@smith.co.uk
        password:
          type: string
          description: The password of the user being created
        username:
          type: string
          description: The optional username of the user being created
          example: JohnDoe89
        accountId:
          type: string
          maxLength: 200
          description: An optional short description of the account

    UserResponse:
      type: object
      additionalProperties: false
      required:
        - id
        - email
      properties:
        id:
          type: string
          format: uuid
          description: A generated unique identifier for the user
        email:
          type: string
          description: The email address of the user being created
          example: john@smith.co.uk
        username:
          type: string
          description: The optional username of the user being created
          example: JohnDoe89
        accountId:
          type: string
          maxLength: 200
          description: An optional short description of the account

    AccountAppRequest:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the account application
        description:
          type: string
          description: A description of the account application being created

    CreateAccountAppResponse:
      type: object
      required:
        - id
        - name
        - accountId
        - clientId
        - clientSecret
      properties:
        id:
          type: string
          format: uuid
          description: primary identifier for the created account application
        name:
          type: string
          description: The name of the account application
        accountId:
          type: string
          format: uuid
          description: The id for the account this application is associated with
        clientId:
          type: string
          format: uuid
          description: The client id for the application, should be exchanged for an access token via the authenticate
            endpoint in order to make authenticated requests to accessible apis.
        clientSecret:
          type: string
          description: The client secret for the application, should be exchanged with the clientId for an access token 
            via the authenticate endpoint in order to make authenticated requests to accessible apis.
            MAKE SURE YOU COPY AND SAVE THIS VALUE, IT IS ONLY RETURNED ONCE AND CANNOT BE ACCESSED LATER.
        description:
          type: string
          description: A description of the account application being created

    AuthenticateUser:
      oneOf:
        - type: object
          additionalProperties: false
          required:
            - email
            - password
          properties:
            email:
              type: string
            password:
              type: string
        - type: object
          required:
            - username
            - password
          properties:
            username:
              type: string
            password:
              type: string

    AuthenticateApp:
      type: object
      additionalProperties: false
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          type: string
        clientSecret:
          type: string

    AuthenticateRes:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string
