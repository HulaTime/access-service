/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/accounts": {
    /** Create a new Account by supplying basic information */
    get: operations["ListAccounts"];
    /** Create a new Account by supplying basic information */
    post: operations["CreateAccount"];
  };
  "/accounts/{id}": {
    get: operations["GetAccount"];
  };
  "/accounts/{id}/applications": {
    /** Create a new Account application */
    post: operations["CreateAccountApplication"];
  };
  "/users": {
    /** Create a new User by supplying login credentials at a minimum */
    post: operations["CreateUser"];
  };
  "/authenticate": {
    /** Authenticate a user or application */
    post: operations["Authenticate"];
  };
}

export interface components {
  schemas: {
    AccountRequest: {
      /**
       * @description The name of the account
       * @example Johns Place
       */
      name: string;
      /**
       * @description The email address of the account owner
       * @example john@smith.co.uk
       */
      email: string;
      /** @description The user password of the account owner */
      password: string;
      /** @description An optional short description of the account */
      description?: string;
    };
    CreateAccountResponse: {
      /**
       * Format: uuid
       * @description A generated unique identifier for the newly created account
       */
      id: string;
      /**
       * @description The name of the account
       * @example Johns Place
       */
      name: string;
      /**
       * @description The email address of the account owner
       * @example john@smith.co.uk
       */
      email: string;
      /** @description An optional short description of the account */
      description?: string;
    };
    AccountResponse: {
      /**
       * Format: uuid
       * @description A generated unique identifier for the newly created account
       */
      id: string;
      /**
       * @description The name of the account
       * @example Johns Place
       */
      name: string;
      /** @description An optional short description of the account */
      description?: string;
    };
    ListAccountResponse: components["schemas"]["AccountResponse"][];
    UserRequest: {
      /**
       * @description The email address of the user being created
       * @example john@smith.co.uk
       */
      email: string;
      /** @description The password of the user being created */
      password: string;
      /**
       * @description The optional username of the user being created
       * @example JohnDoe89
       */
      username?: string;
      /** @description An optional short description of the account */
      accountId?: string;
    };
    UserResponse: {
      /**
       * Format: uuid
       * @description A generated unique identifier for the user
       */
      id: string;
      /**
       * @description The email address of the user being created
       * @example john@smith.co.uk
       */
      email: string;
      /**
       * @description The optional username of the user being created
       * @example JohnDoe89
       */
      username?: string;
      /** @description An optional short description of the account */
      accountId?: string;
    };
    AccountAppRequest: {
      /** @description The name of the account application */
      name: string;
      /** @description A description of the account application being created */
      description?: string;
    };
    CreateAccountAppResponse: {
      /**
       * Format: uuid
       * @description primary identifier for the created account application
       */
      id: string;
      /** @description The name of the account application */
      name: string;
      /**
       * Format: uuid
       * @description The id for the account this application is associated with
       */
      accountId: string;
      /**
       * Format: uuid
       * @description The client id for the application, should be exchanged for an access token via the authenticate endpoint in order to make authenticated requests to accessible apis.
       */
      clientId: string;
      /** @description The client secret for the application, should be exchanged with the clientId for an access token via the authenticate endpoint in order to make authenticated requests to accessible apis. MAKE SURE YOU COPY AND SAVE THIS VALUE, IT IS ONLY RETURNED ONCE AND CANNOT BE ACCESSED LATER. */
      clientSecret: string;
      /** @description A description of the account application being created */
      description?: string;
    };
    AuthenticateUser:
      | {
          email: string;
          password: string;
        }
      | {
          username: string;
          password: string;
        };
    AuthenticateApp: {
      clientId: string;
      clientSecret: string;
    };
    AuthenticateRes: {
      accessToken: string;
    };
  };
}

export interface operations {
  /** Create a new Account by supplying basic information */
  ListAccounts: {
    responses: {
      /** Successful creation of an account */
      201: {
        content: {
          "application/json": components["schemas"]["ListAccountResponse"];
        };
      };
    };
  };
  /** Create a new Account by supplying basic information */
  CreateAccount: {
    responses: {
      /** Successful creation of an account */
      201: {
        content: {
          "application/json": components["schemas"]["CreateAccountResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccountRequest"];
      };
    };
  };
  GetAccount: {
    parameters: {
      path: {
        /** primary id, uuid of the account to be retrieved */
        id: string;
      };
    };
    responses: {
      /** Successful creation of an account */
      200: {
        content: {
          "application/json": components["schemas"]["AccountResponse"];
        };
      };
    };
  };
  /** Create a new Account application */
  CreateAccountApplication: {
    parameters: {
      path: {
        /** primary id for the account the application will belong to */
        id: string;
      };
    };
    responses: {
      /** Successful creation of an account */
      201: {
        content: {
          "application/json": components["schemas"]["CreateAccountAppResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccountAppRequest"];
      };
    };
  };
  /** Create a new User by supplying login credentials at a minimum */
  CreateUser: {
    responses: {
      /** Successful creation of an account */
      201: {
        content: {
          "application/json": components["schemas"]["UserResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
      };
    };
  };
  /** Authenticate a user or application */
  Authenticate: {
    responses: {
      /** Successful creation of an account */
      200: {
        content: {
          "application/json": components["schemas"]["AuthenticateRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json":
          | components["schemas"]["AuthenticateUser"]
          | components["schemas"]["AuthenticateApp"];
      };
    };
  };
}

export interface external {}
